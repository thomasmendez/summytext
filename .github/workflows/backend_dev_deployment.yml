name: Backend - Development.yml CI

on:
  push:
    branches-ignore:
      - main

jobs:
  pre_build:
    runs-on: ubuntu-latest
    env:
      AWS_BUCKET_NAME: summytext-api-dev
      DIST_NAME: function-dev
      DIST_PATH: backend/function.zip
      AWS_LAMBDA_FUNCTION_S3_KEY: function.zip
      AWS_LAMBDA_FUNCTION_NAME: summytext-api-dev
      AWS_LAMBDA_FUNCTION_HANDLER: app.main.handler
      AWS_LAMBDA_FUNCTION_RUNTIME: python3.9
    outputs:
      AWS_BUCKET_NAME: ${{ steps.bucket_name.outputs.bucket }}
      DIST_NAME: ${{ env.DIST_NAME }}
      DIST_PATH: ${{ env.DIST_PATH }}
      AWS_LAMBDA_FUNCTION_S3_KEY: ${{ env.AWS_LAMBDA_FUNCTION_S3_KEY }}
      AWS_LAMBDA_FUNCTION_NAME: ${{ env.AWS_LAMBDA_FUNCTION_NAME }}
      AWS_LAMBDA_FUNCTION_HANDLER: ${{ env.AWS_LAMBDA_FUNCTION_HANDLER }}
      AWS_LAMBDA_FUNCTION_RUNTIME: ${{ env.AWS_LAMBDA_FUNCTION_RUNTIME }}
    steps:
      - name: "Create bucket_name_suffix Output"
        id: bucket_name_suffix
        run: |
          suffix=$(echo ${{ github.ref_name }} | sed 's/\//-/')
          echo "suffix=$suffix" >> $GITHUB_OUTPUT

      - name: "Create bucket_name Output"
        id: bucket_name
        run: |
          bucket_name=$(echo ${{ env.AWS_BUCKET_NAME }}-${{ steps.bucket_name_suffix.outputs.suffix }})
          echo "bucket=$bucket_name" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: pre_build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Add Environment Variables
        working-directory: backend
        run: |
          echo "ENV=dev" > ./app/.env

      - name: Build Docker Container
        working-directory: backend
        run: |
          docker build -t docker.io/summytext/backend:${{ github.sha }} .

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/summytext/backend:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '10m'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and Push Image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: summytext-backend-dev
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag docker.io/summytext/backend:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
